<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="jar" name="Policy Miner">

	<property name="bin.dir" value="../bin"/>
	<property name="tools.dir" value="../tools"/> <!-- Note dextra is in the eclipse build path so it is copied to the bin.dir and thus does not need to be included here -->
	<property name="build.dir" value="../build-jars"/>
	<property name="lib.dir" value="../lib"/>
	<property name="soot.dir" value="../../soot"/>
	<property name="heros.dir" value="../../heros"/>
	<property name="jasmin.dir" value="../../jasmin"/>
	<property name="verboseFlag" value="0" />

	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="silent">
		<script language="javascript">
		    var logger = project.getBuildListeners().firstElement();
		    var verboseMode = project.getProperty( "verboseFlag" )
		    if ( ! "1".equals( verboseMode ) )
		        logger.setMessageOutputLevel( 0 );
		</script>
	</target>

	<target name="jar" depends="silent,acminer_query_fat_jar,acminer_query_client_fat_jar,acminer_query_server_fat_jar,android_info_jar,policy_miner_jar,stub_pairs_fat_jar"/>
	
	<target name="init">
		<mkdir dir="${build.dir}"/>
	</target>

	<target name="android_info_jar" depends="init">
		<jar destfile="${build.dir}/AndroidInfo.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
			<manifest>
				<attribute name="Main-Class" value="org.sag.pminer.run.AndroidInfo"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			<fileset dir="${bin.dir}">
				<include name="org/sag/pminer/run/AndroidInfo.class" />
				<include name="org/sag/pminer/run/AndroidInfo$XStreamSetup.class" />
				<include name="org/sag/xstream/XStreamInOut.class" />
				<include name="org/sag/xstream/XStreamInOut$XStreamInOutInterface.class" />
				<include name="org/sag/xstream/XStreamInOut$XStreamInOutInterface$AbstractXStreamSetup.class" />
			</fileset>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
		</jar>
	</target>
	
	<!--<target name="acminer_query_jar" depends="init">
			<jar destfile="${build.dir}/ACMinerQuery.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
				<manifest>
					<attribute name="Main-Class" value="org.sag.pminer.database.acminer.ACMinerQuery"/>
					<attribute name="Class-Path" value="."/>
				</manifest>
				<fileset dir="${bin.dir}">
					<include name="org/sag/pminer/database/FileHashDatabase.class" />
					<include name="org/sag/pminer/database/acminer/**" />
					<include name="org/sag/common/io/FileHelpers.class" />
					<include name="org/sag/common/io/FileHelpersList.class" />
					<include name="org/sag/common/tools/SortingMethods.class" />
					<include name="org/sag/soot/SootSort.class" />
					<include name="org/sag/soot/xstream/**" />
					<include name="org/sag/xstream/XStreamInOut.class" />
					<include name="org/sag/xstream/XStreamInOut$XStreamInOutInterface.class" />
					<include name="org/sag/xstream/XStreamInOut$XStreamInOutInterface$AbstractXStreamSetup.class" />
				</fileset>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
			</jar>
		</target>-->
	
	<!--<target name="acminer_query_jar" depends="init,acminer_query_fat_jar,proguard_simple_miner_query_jar" />-->
	
	<target name="stub_pairs_fat_jar" depends="init">
			<jar destfile="${build.dir}/stubpairs-fat.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
				<manifest>
					<attribute name="Main-Class" value="org.sag.pminer.tools.StubPairs"/>
					<attribute name="Class-Path" value="."/>
				</manifest>
				
				<fileset dir="${bin.dir}"/>
				<fileset dir="${soot.dir}/classes"/>
				<fileset dir="${heros.dir}/target/classes"/>
				<fileset dir="${jasmin.dir}/classes"/>
				
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/guava.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/dexlib2.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/util.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/baksmali.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/smali.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/bcprov.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/z3.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-api.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-simple.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/jsoup.jar"/>
				
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/polyglot.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/AXMLPrinter2.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/hamcrest-all-1.3.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/javassist-3.18.2-GA.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/mockito-all-1.10.8.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/powermock-mockito-1.6.1-full.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/jboss-common-core-2.5.0.Final.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/asm-debug-all-5.1.jar"/>
				
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/org.hamcrest.core_1.3.0.jar"/>
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/mockito-all-1.9.5.jar"/>
				
				<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${jasmin.dir}/libs/java_cup.jar"/>
			</jar>
		</target>
	
	<target name="acminer_query_fat_jar" depends="init">
		<jar destfile="${build.dir}/acminer_query-fat.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
			<manifest>
				<attribute name="Main-Class" value="org.sag.pminer.database.acminer.ACMinerQuery"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			
			<fileset dir="${bin.dir}"/>
			<fileset dir="${soot.dir}/classes"/>
			<fileset dir="${heros.dir}/target/classes"/>
			<fileset dir="${jasmin.dir}/classes"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/guava.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/dexlib2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/util.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/baksmali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/smali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/bcprov.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/z3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-api.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-simple.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/polyglot.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/AXMLPrinter2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/hamcrest-all-1.3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/javassist-3.18.2-GA.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/mockito-all-1.10.8.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/powermock-mockito-1.6.1-full.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/jboss-common-core-2.5.0.Final.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/asm-debug-all-5.1.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/org.hamcrest.core_1.3.0.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/mockito-all-1.9.5.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${jasmin.dir}/libs/java_cup.jar"/>
		</jar>
	</target>
	
	<target name="acminer_query_client_fat_jar" depends="init">
		<jar destfile="${build.dir}/acminer_query_client-fat.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
			<manifest>
				<attribute name="Main-Class" value="org.sag.pminer.database.acminer.ACMinerQueryClient"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			
			<fileset dir="${bin.dir}"/>
			<fileset dir="${soot.dir}/classes"/>
			<fileset dir="${heros.dir}/target/classes"/>
			<fileset dir="${jasmin.dir}/classes"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/guava.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/dexlib2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/util.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/baksmali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/smali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/bcprov.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/z3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-api.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-simple.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/polyglot.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/AXMLPrinter2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/hamcrest-all-1.3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/javassist-3.18.2-GA.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/mockito-all-1.10.8.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/powermock-mockito-1.6.1-full.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/jboss-common-core-2.5.0.Final.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/asm-debug-all-5.1.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/org.hamcrest.core_1.3.0.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/mockito-all-1.9.5.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${jasmin.dir}/libs/java_cup.jar"/>
		</jar>
	</target>
	
	<target name="acminer_query_server_fat_jar" depends="init">
		<jar destfile="${build.dir}/acminer_query_server-fat.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
			<manifest>
				<attribute name="Main-Class" value="org.sag.pminer.database.acminer.ACMinerQueryServer"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			
			<fileset dir="${bin.dir}"/>
			<fileset dir="${soot.dir}/classes"/>
			<fileset dir="${heros.dir}/target/classes"/>
			<fileset dir="${jasmin.dir}/classes"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/guava.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/dexlib2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/util.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/baksmali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/smali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/bcprov.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/z3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-api.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-simple.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/polyglot.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/AXMLPrinter2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/hamcrest-all-1.3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/javassist-3.18.2-GA.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/mockito-all-1.10.8.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/powermock-mockito-1.6.1-full.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/jboss-common-core-2.5.0.Final.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/asm-debug-all-5.1.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/org.hamcrest.core_1.3.0.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/mockito-all-1.9.5.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${jasmin.dir}/libs/java_cup.jar"/>
		</jar>
	</target>
	
	<!--<target name="proguard_simple_miner_query_jar" depends="init">
		 <taskdef resource="proguard/ant/task.properties" classpath="${lib.dir}/proguard.jar" />
		<proguard obfuscate="false" optimize="false">
			<injar  file="${build.dir}/ACMinerQueryFat.jar" />
			<outjar file="${build.dir}/ACMinerQuery.jar" />

			<libraryjar file="${java.home}/lib/rt.jar" />
			
			<keep access="public" name="org.sag.pminer.database.acminer.ACMinerQuery">
				<method access="public static" type="void" name="main" parameters="java.lang.String[]" />
			</keep>
			
			<keep name="com.beust.jcommander.**" />
			<keep name="com.thoughtworks.xstream.**" />
			
			<!- - Preserve all annotations. - ->
			<keepattribute name="*Annotation*" />
			
			<!- - Preserve all native method names and the names of their classes. - ->
		    <keepclasseswithmembernames includedescriptorclasses="true">
		    	<method access="native" />
		    </keepclasseswithmembernames>
			
			<!- - Preserve the methods that are required in all enumeration classes. - ->
		    <keepclassmembers allowoptimization="false" type="enum">
		    	<method access="public static" type="**[]" name="values" parameters="" />
		    	<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
		    </keepclassmembers>
			
			<!- - Explicitly preserve all serialization members. The Serializable
		         interface is only a marker interface, so it wouldn't save them.
		         You can comment this out if your library doesn't use serialization.
		         If your code contains serializable classes that have to be backward
		         compatible, please refer to the manual. - ->
		    <keepclassmembers implements="java.io.Serializable">
		    	<field access="static final" type="long" name="serialVersionUID" />
		    	<field access="static final" type="java.io.ObjectStreamField[]" name="serialPersistentFields" />
		    	<method access="private" type="void" name="writeObject" parameters="java.io.ObjectOutputStream" />
		    	<method access="private" type="void" name="readObject" parameters="java.io.ObjectInputStream" />
		    	<method type="java.lang.Object" name="writeReplace" parameters="" />
		    	<method type="java.lang.Object" name="readResolve" parameters="" />
		    </keepclassmembers>
			
			<dontwarn filter="com.beust.jcommander.**" />
			<dontwarn filter="com.thoughtworks.xstream.**" />
			<dontwarn filter="com.google.common.**" />
			<dontnote filter="com.google.common.**" />
		</proguard>
	</target>-->
	
	<target name="policy_miner_jar" depends="init">
		<jar destfile="${build.dir}/PolicyMiner-fat.jar" filesetmanifest="mergewithoutmain" duplicate="preserve" index="true" indexMetaInf="true">
			<manifest>
				<attribute name="Main-Class" value="org.sag.pminer.run.PMiner"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			
			<fileset dir="${bin.dir}"/>
			<fileset dir="${soot.dir}/classes"/>
			<fileset dir="${heros.dir}/target/classes"/>
			<fileset dir="${jasmin.dir}/classes"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/guava.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/dexlib2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/util.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/baksmali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/smali.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/bcprov.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/z3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xmlpull.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xpp3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/xstream.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-api.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${lib.dir}/slf4j-simple.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/polyglot.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/AXMLPrinter2.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/hamcrest-all-1.3.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/javassist-3.18.2-GA.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/mockito-all-1.10.8.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/powermock-mockito-1.6.1-full.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/jboss-common-core-2.5.0.Final.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${soot.dir}/libs/asm-debug-all-5.1.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/org.hamcrest.core_1.3.0.jar"/>
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${heros.dir}/libs/mockito-all-1.9.5.jar"/>
			
			<zipfileset excludes="META-INF/*.SF,NOTICE,LICENSE*,asm-license.txt,cglib-license.txt,hamcrest-license.txt,objenesis-license.txt" src="${jasmin.dir}/libs/java_cup.jar"/>
		</jar>
	</target>
</project>
